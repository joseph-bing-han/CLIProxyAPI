---
alwaysApply: true
---
Always respond in Chinese-simplified
## 基本交互规则
1. 所有AI对话的Response必须始终中文
2. 源代码内容必须使用英文, 包括但不限于里面的文本, label, 日志, message, 只有注释必须用中文

## 代码开发规则
3. PHP文件必须使用use导入, 以减短代码长度, 禁止直接使用全路径类
4. Laravel项目如果相同的功能既有Facades又有Helper时必须优先使用Helper功能, 例如logger(), config(), cache()这些, 没有Helper时才使用Facades
5. 修改代码前, 优先使用Context7工具查询相关文档, 了解正确的方法

## MCP工具使用规则
6. 任何需要通过浏览器进行的动作, 都使用内置Chrome工具来进行
7. 要操作地MySQL数据库中数据时, 使用dbhub工具进行
8. **Sequential-Thinking工具强制使用规则**:
   **触发条件**（满足任一即必须先调用sequential-thinking）：
   - 用户明确要求"思考"、"分析"、"规划"、"设计方案"
   - 任务涉及3个以上的步骤或文件修改
   - 需要在多个技术方案间做选择（如：使用A库还是B库）
   - 实现新功能或重构现有代码架构
   - 需要修改数据库结构或关键业务逻辑
   - 问题描述不清晰，需要先理解需求
   - 用户提出的问题中包含"如何"、"最佳实践"、"优化"等词汇
   **执行要求**：
   - 在提供任何代码或具体方案前，必须先完成sequential-thinking过程
   - 思考过程中至少包含：问题理解、方案对比、风险评估、最终决策
   - 思考完成后在回复中简要说明选择的理由
   **豁免情况**（可以不使用的情况）：
   - 简单的信息查询或文档翻译
   - 单个文件的小改动（如修改变量名、添加注释）
   - 明确且简单的操作指令（如"读取文件X"、"列出目录Y"）

9. **Web-Search工具使用规则**:
   - 需要搜索互联网上的信息时, 优先使用web-search工具进行, 如无需要结果, 再使用内置工具
   - **调用格式要求**：
     - `engines` 参数必须使用**全小写**的引擎名称数组
     - 支持的引擎：`["bing", "duckduckgo", "exa", "brave"]`
     - `query` 参数使用自然语言查询字符串
     - `limit` 参数可选，默认为10，控制返回结果数量   

## 文档要求
10. 在没有明确要求时, **禁止**自动创建总结文档
11. 每次被**要求**进行任务总结或者交接任务(新增)时, 都自动在docs下生成对应的md文件; 如果要求是**更新**, 那就修改现有文档
12. 新文档文件名前要加当前时间, 时间可以用 `date +"%Y-%m-%d-%H-%M"` 命令获取


## 数据安全要求
13. **禁止**不经过数据迁移文件, 直接修改数据库结构或者数据(包括但不限于使用dbhub, 使用artsian命令行)